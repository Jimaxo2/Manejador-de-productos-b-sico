/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package productsmanajer;

import java.io.*;
import java.util.Scanner;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jimmy Silva Luna
 */
public class ShowProducts extends javax.swing.JFrame {

    /**
     * Creates new form ShowProducts
     */
    private final String FILE_ACCES;
    public ShowProducts(String FILE_ACCES) {
        this.FILE_ACCES = FILE_ACCES;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        ProductsTable = new javax.swing.JTable();
        Name = new javax.swing.JTextField();
        Price = new javax.swing.JTextField();
        Amount = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Description = new javax.swing.JTextArea();
        Insert = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        RefreshTable = new javax.swing.JButton();
        FillFilelds = new javax.swing.JButton();
        setEmpty = new javax.swing.JButton();
        FileRoute = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        ProductsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Descripcion", "Precio", "Cantidad"
            }
        ));
        jScrollPane2.setViewportView(ProductsTable);

        jLabel1.setText("Nombre:");

        jLabel2.setText("Precio:");

        jLabel3.setText("Cantidad:");

        jLabel4.setText("Descripcion:");

        Description.setColumns(20);
        Description.setRows(5);
        jScrollPane3.setViewportView(Description);

        Insert.setText("Agregar");
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });

        Update.setText("Modificar");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setText("Eliminar");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        RefreshTable.setText("RefrescarTabla");
        RefreshTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshTableActionPerformed(evt);
            }
        });

        FillFilelds.setText("Rellenar campos");
        FillFilelds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FillFileldsActionPerformed(evt);
            }
        });

        setEmpty.setText("Vaciar campos");
        setEmpty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setEmptyActionPerformed(evt);
            }
        });

        FileRoute.setText("jLabel5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RefreshTable, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(77, 77, 77)
                            .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(77, 77, 77)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Amount, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jLabel3))
                                    .addGap(31, 31, 31)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(FillFilelds, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(setEmpty, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Insert, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(Update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(Delete, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(FileRoute)))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(FileRoute)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RefreshTable)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(88, 88, 88))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(FillFilelds))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(setEmpty)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Insert)
                    .addComponent(Delete)
                    .addComponent(Update))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
        // TODO add your handling code here:
        Product newProduct = new Product(Name.getText(), Description.getText(), Double.parseDouble(Price.getText()), Integer.parseInt(Amount.getText()));
        
        String[] productInfo = {Name.getText(), Description.getText(), Price.getText(), Amount.getText()};
        
        // Insertata en un archivo el contenido
        try {
            newProduct.insertIntoFile(FILE_ACCES, productInfo);
        } catch (IOException ex) {
            System.out.println("Error " + ex.getMessage());
        }
        Name.setText("");
        Description.setText("");
        Price.setText("");
        Amount.setText("");
    }//GEN-LAST:event_InsertActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel element = (DefaultTableModel) ProductsTable.getModel();
        int numRow = ProductsTable.getSelectedRow();
        String name = Name.getText();
        String description = Description.getText();
        String price = Price.getText();
        String amount = Amount.getText();
        
        try {
            File file = new File(FILE_ACCES);
            Scanner inFile = new Scanner(file);
            
            int count = 0;
            String fullInfo= "";
            while (inFile.hasNextLine()) {
                if (count != numRow) {
                    fullInfo += inFile.nextLine() + "\n";
                    count++;
                } else {
                    fullInfo += "|" + name + "|" + description + "|" + price + "|" + amount + "||" + "\n";
                    inFile.nextLine();
                    count++;
                }
            }
            BufferedWriter bf = new BufferedWriter(new FileWriter(file));
            bf.write(fullInfo);
            bf.close();
        } catch (IOException ex) {
            System.out.println("Error " + ex.getMessage());
        }
        Name.setText("");
        Description.setText("");
        Price.setText("");
        Amount.setText("");
    }//GEN-LAST:event_UpdateActionPerformed

    private void RefreshTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshTableActionPerformed
        // TODO add your handling code here:
        DefaultTableModel insertOnTable = (DefaultTableModel) ProductsTable.getModel();
        File file = new File(FILE_ACCES);
        Object[] Products = new Object[5];
        // Eliminar las filas de la tabla actual
        if (insertOnTable.getRowCount() > 0) {
            for (int i = ProductsTable.getRowCount()-1; i >= 0 ; i--) {
                insertOnTable.removeRow(i);
            }
        } 
        // Rellenar los datos de la tabla en el FILE_ACCES
        try {
            Scanner InFile = new Scanner(file);
            int numLines = 0;
            while (InFile.hasNextLine()) {
                String Line = InFile.nextLine(); // Lee una línea completa
                numLines++; // Cuenta la línea
                
                // Este ciclo se encarga de separar los valores en cada posicion de la tabla
                String[] separation = {"", "", "", ""};
                int pos = 0;
                for (int i = 1; i < Line.length(); i++) {
                    if (Line.charAt(i) == '|') {pos++;}
                    else {
                        separation[pos] += Line.charAt(i);
                    }
                }
                Products[0] = (numLines);
                Products[1] = (separation[0]);
                Products[2] = (separation[1]);
                Products[3] = (separation[2]);
                Products[4] = (separation[3]);
                insertOnTable.addRow(Products);
            }
            InFile.close();
        } catch (IOException ex) {
            System.out.println("Error " + ex.getMessage());
        }
        
    }//GEN-LAST:event_RefreshTableActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        // Elimina la fila seleccionada en la tabla
        DefaultTableModel element = (DefaultTableModel) ProductsTable.getModel();
        int numRow = ProductsTable.getSelectedRow();
        element.removeRow(numRow);
        
        // Eliminamos el dato
        try {
            File file = new File(FILE_ACCES);
            Scanner inFile = new Scanner(file);
            String fullInfo = "";
            int count = 0;
            
            while(inFile.hasNextLine()) {
                if (count != numRow) {
                    fullInfo += inFile.nextLine() + "\n";
                    count++;
                } else {
                    inFile.nextLine();
                    count++;
                }
                
            }
            BufferedWriter bf = new BufferedWriter(new FileWriter(file));
            bf.write(fullInfo);
            bf.close();
        } catch (IOException ex) {
            System.out.println("Error " + ex.getMessage());
        }
        
    }//GEN-LAST:event_DeleteActionPerformed

    private void FillFileldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FillFileldsActionPerformed
        // TODO add your handling code here:
        DefaultTableModel element = (DefaultTableModel) ProductsTable.getModel();
        int numRow = ProductsTable.getSelectedRow();
        String name = String.valueOf(element.getValueAt(numRow, 1));
        String description = String.valueOf(element.getValueAt(numRow, 2));
        String price = String.valueOf(element.getValueAt(numRow, 3));
        String amount = String.valueOf(element.getValueAt(numRow, 4));
        
        Name.setText(name);
        Description.setText(description);
        Price.setText(price);
        Amount.setText(amount);
    }//GEN-LAST:event_FillFileldsActionPerformed

    private void setEmptyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setEmptyActionPerformed
        // TODO add your handling code here:
        Name.setText("");
        Description.setText("");
        Price.setText("");
        Amount.setText("");
    }//GEN-LAST:event_setEmptyActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        FileRoute.setText("Ruta del archivo seleccionado: " + FILE_ACCES);
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Amount;
    private javax.swing.JButton Delete;
    private javax.swing.JTextArea Description;
    private javax.swing.JLabel FileRoute;
    private javax.swing.JButton FillFilelds;
    private javax.swing.JButton Insert;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Price;
    private javax.swing.JTable ProductsTable;
    private javax.swing.JButton RefreshTable;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton setEmpty;
    // End of variables declaration//GEN-END:variables
}
